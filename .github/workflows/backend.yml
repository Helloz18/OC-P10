# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven
# Tests will be perform with JaCoCo and saved as artefact in the run of the workflow
# Then an analysis will be done by SonarCloud and can be found https://sonarcloud.io/organizations/helloz18/projects
# A docker container will be created and push to DockerHub https://hub.docker.com/repository/docker/hf2810/oc-p10/general

 # This workflow uses actions that are not certified by GitHub.
 # They are provided by a third-party and are governed by
 # separate terms of service, privacy policy, and support
 # documentation.

 name: Java CI with Maven, tests with JaCoCo, analysis with SonarCloud and Deployment on DockerHub

 on:
   push:
     branches: [ "main" ]
   pull_request:
     branches: [ "main" ]

 jobs:
   build:

    runs-on: ubuntu-latest


    steps:
    
     - uses: actions/checkout@v4
       with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    
     - name: Set up JDK 21
       uses: actions/setup-java@v4
       with:
         java-version: '21'
         distribution: 'temurin'
         cache: maven
      
     - name: Build and Test with Maven
       run: mvn -B clean verify
       working-directory: back

##JaCoCo      
     - name: Save JaCoCo reports
       uses: actions/upload-artifact@v4
       with:
           name: jacoco
           path: back/target/site/jacoco/
           
##SonarCloud
     - name: Cache SonarCloud packages
       uses: actions/cache@v4
       with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
     - name: Cache Maven packages
       uses: actions/cache@v4
       with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
     - name: Build and analyze
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=bobapp -Dsonar.projectName=helloz18-bobapp-back
       working-directory: back
      
##Docker
     - name: Build docker image and push on docker hub
       uses: mr-smithers-excellent/docker-build-push@v6
       with:
         image: hf2810/oc-p10
         tags: bobapp-back
         registry: docker.io
         directory: back
         dockerfile: back/Dockerfile
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_PASSWORD }}
